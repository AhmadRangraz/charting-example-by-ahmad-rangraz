import Head from 'next/head'
import ChartBar from '../components/ChartBar/index.jsx'
import ChartFunnel from '../components/ChartFunnel/index.jsx'
import { useState, useEffect, useCallback } from 'react'
import { ColorPicker } from 'primereact/colorpicker';
import API from "API"
import generateColor from '../utils/generateColor'
import _ from 'lodash'
import { InputSwitch } from "primereact/inputswitch";
import { Button } from 'primereact/button';


export default function Home() {
  const [color1, setColor1] = useState("#7209b7")
  const [color2, setColor2] = useState("#3f37c9")

  const [chartState, setChartState] = useState("bar")
  const [rawData, setRawData] = useState()
  const [data, setData] = useState()
  const [randomState, setRandomState] = useState(false)

  const gettingData = () => {
    //restructuring  data 
    console.log("rawData")
    console.log(rawData)
    const sameCategory = _(rawData).groupBy("category").value()
    let finalData = []
    Object.values(sameCategory).forEach((item) => {
      let tempObj = {}
      tempObj.category = item[0].category
      tempObj.price = 0
      if (randomState) {
        tempObj.fill = generateColor()
      }
      item.forEach((item) => {
        tempObj.price += item.price
      })
      finalData.push(tempObj)
      console.log(tempObj)
    })
    finalData.sort((a, b) => b.price - a.price)
    setData(finalData)
  }


  useEffect(() => {
    gettingData()
  }, [rawData])

  useEffect(() => {
    gettingData()
  }, [randomState])

  //calling api to get the data
  useEffect(async () => {
    await API.get("products")
      .then(({ data }) => {
        setRawData(data)
      })
      .catch(err => console.log(err))
  }, [])
  return (
    <div>
      <Head>
        <title>Ahmad Rangraz charting example</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className='chartHolder'>
          {data && data.length >0 ?
            <>
            {chartState ==='bar' && <ChartBar data={data} color1={color1} color2={color2} />}
            {chartState ==='funnel' && <ChartFunnel data={data} color1={color1} color2={color2} />}
            </>
            : <h2 className='text-white'>loading...</h2>
          }

        </div>
        <div className='text-white d-flex flex-column '>
          <p>choose your desired colors for the columns : </p>
          <div className=' d-flex align-items-center justify-content-around'>
            <div className=' d-flex align-items-center '>
              <span className='me-2'>random color : </span>
              <InputSwitch checked={randomState} onChange={(e) => setRandomState(e.value)} />
            </div>


            <div className={` ${randomState && 'disabled'} d-flex align-items-center justify-content-between ms-4`}>
              <div className='ms-4'>
                <span>first color : </span>
                <ColorPicker disabled={randomState} value={color2} onChange={(e) => setColor2(`#${e.value}`)} />
              </div>
              <div className='ms-4'>
                <span>second color : </span>
                <ColorPicker disabled={randomState} value={color1} onChange={(e) => setColor1(`#${e.value}`)} />
              </div>
            </div>
          </div>
        </div>
      
          <div className='text-white mt-4'>
            <p>chose your desired chart to see the data :</p>
            <div className='d-flex justify-content-between'>
              <Button label="Bar chart" icon="pi pi-chart-bar" onClick={() => setChartState("bar")} />
              <Button label="funnel chart" icon="pi pi-chart-line" onClick={() => setChartState("funnel")} />
            </div>
          </div>

      </main>


    </div>
  )
}
